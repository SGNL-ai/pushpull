<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.17 (Ruby 3.3.3) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-tulshibagwale-pushpull-delivery-01" category="info" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="pushpull">Push And Pull Based Security Event Token (SET) Delivery Using HTTP</title>

    <author initials="A." surname="Tulshibagwale" fullname="Atul Tulshibagwale">
      <organization>SGNL</organization>
      <address>
        <email>atul@sgnl.ai</email>
      </address>
    </author>

    <date year="2024" month="July" day="03"/>

    <area>sec</area>
    
    <keyword>JSON Web Token</keyword> <keyword>JWT</keyword> <keyword>Security Event Token</keyword> <keyword>SET</keyword> <keyword>Delivery</keyword> <keyword>JavaScript Object Notation</keyword> <keyword>JSON</keyword>

    <abstract>


<?line 51?>
<t>In situations where a transmitter of Security Event Tokens (SETs) to a network peer is also a receiver of SETs from the same peer, it is helpful to have an efficient way of sending an receiving SETs in one HTTP transaction. Using current mechanisms such as "Push-Based Delivery of Security Event Tokens (SETs) Using HTTP" or "Poll-Based Delivery of Security Event Tokens (SETs) Using HTTP" both require two or more HTTP connections to exchange SETs between peers. In many cases, such as when using the OpenID Shared Signals Framework (SSF), the situation where each entity is both a transmitter and receiver is getting increasingly common. In addition, this specification enables the transmission and reception of multiple SETs in one HTTP connection.</t>



    </abstract>



  </front>

  <middle>


<?line 53?>

<section anchor="introduction"><name>Introduction</name>
<t>Workloads that exchange SETs <xref target="RFC8417"/> with each other ("Transceivers") can do so efficiently using the protocol defined in this specification. Although this specification works along the lines of the DeliveryPush <xref target="RFC8935"/> and DeliveryPoll <xref target="RFC8936"/> specifications, it makes a few important additions:</t>

<t><list style="symbols">
  <t>A Transceiver initiating a communication can send multiple SETs in one HTTP connection to a Peer</t>
  <t>The Transceiver initiating communication can acknowledge previously received SETs in the same HTTP connection to the Peer</t>
  <t>The Peer responding to the communication can send multiple SETs in its response to a connection from the Transceiver</t>
  <t>The Peer responding to the communication can acknowledge previously received SETs in its response to the Transceiver</t>
</list></t>

</section>
<section anchor="notational-conventions"><name>Notational Conventions</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when,
they appear in all capitals, as shown here.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<dl>
  <dt>Transceiver</dt>
  <dd>
    <t>A networked workload that can act both as a transmitter of SETs and a receiver of SETs. It communicates with other trusted Transceivers to transmit and receive SETs using the protocol defined herein.</t>
  </dd>
  <dt>Peer</dt>
  <dd>
    <t>Another name for a Transceiver, used to signify the other end of the communication from a Transceiver.</t>
  </dd>
  <dt>Initiator</dt>
  <dd>
    <t>A Transceiver initiating communication with a Peer.</t>
  </dd>
  <dt>Responder</dt>
  <dd>
    <t>A Transceiver responding to communication from a Peer.</t>
  </dd>
  <dt>DeliveryPush</dt>
  <dd>
    <t>The IETF RFC titled "Push-Based Delivery of Security Event Tokens (SETs) Using HTTP" <xref target="RFC8935"/>.</t>
  </dd>
  <dt>DeliveryPoll</dt>
  <dd>
    <t>The IETF RFC titled "Poll-Based Delivery of Security Event Tokens (SETs) Using HTTP" <xref target="RFC8936"/>.</t>
  </dd>
</dl>

</section>
<section anchor="pushpull-endpoint"><name>Pushpull Endpoint</name>
<t>Each Transceiver that supports this specification MUST support a "Pushpull" endpoint. This endpoint MUST be capable of serving HTTP <xref target="RFC9110"/> requests. This endpoint MUST be TLS <xref target="RFC8446"/> enabled and MUST reject any communication not using TLS.</t>

</section>
<section anchor="communication-object"><name>Communication Object</name>
<t>A Communication Object is a JSON object <xref target="RFC8259"/>, and is a unit of communication used in this specification used both in requests and responses. When used in a request, the Initiator MAY have additional fields defined the later sections below. The common fields of this object are:</t>

<dl>
  <dt>sets</dt>
  <dd>
    <t>OPTIONAL. A JSON object containing key-value pairs in which the key of a field is a string that contains the <spanx style="verb">jti</spanx> value of the SET that is specified in the value of the field. This field MAY be omitted to indicate that no SETs are being delivered by the initiator in this communication.</t>
  </dd>
  <dt>ack</dt>
  <dd>
    <t>OPTIONAL. An array of strings, in which each string is the <spanx style="verb">jti</spanx> value of a previously received SET that is acknowledged in this object. This array MAY be empty or this field MAY be omitted to indicate that no previously received SETs are being acknowledged in this communication.</t>
  </dd>
  <dt>setErrs</dt>
  <dd>
    <t>OPTIONAL. A JSON object containing key-value pairs in which the key of a field is a string that contains the <spanx style="verb">jti</spanx> value of a previously received SET that the sender of the communication object was unable to process. The value of the field is a JSON object that has the following fields:
</t>

    <dl>
      <dt>err</dt>
      <dd>
        <t>OPTIONAL. The short reason why the specified SET failed to be processed.</t>
      </dd>
      <dt>description</dt>
      <dd>
        <t>OPTIONAL. An explanation of why the SET failed to be processed.</t>
      </dd>
    </dl>
  </dd>
</dl>

<section anchor="example"><name>Example</name>
<t>The following is a non-normative example of a Communication Object</t>

<figure title="Example of a Communication Object" anchor="fig-communication-object-example"><sourcecode type="json"><![CDATA[
{
  "sets": {
    "4d3559ec67504aaba65d40b0363faad8": 
    "eyJhbGciOiJub25lIn0.
    eyJqdGkiOiI0ZDM1NTllYzY3NTA0YWFiYTY1ZDQwYjAzNjNmYWFkOCIsImlhdC
    I6MTQ1ODQ5NjQwNCwiaXNzIjoiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tIiwi
    YXVkIjpbImh0dHBzOi8vc2NpbS5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MW
    ZhNWJiYzg3OTU5M2I3NzU0IiwiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tL0Zl
    ZWRzLzVkNzYwNDUxNmIxZDA4NjQxZDc2NzZlZTciXSwiZXZlbnRzIjp7InVybj
    ppZXRmOnBhcmFtczpzY2ltOmV2ZW50OmNyZWF0ZSI6eyJyZWYiOiJodHRwczov
    L3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZhYjYxZTc1Mj
    FkOSIsImF0dHJpYnV0ZXMiOlsiaWQiLCJuYW1lIiwidXNlck5hbWUiLCJwYXNz
    d29yZCIsImVtYWlscyJdfX19.",
    "3d0c3cf797584bd193bd0fb1bd4e7d30":
    "eyJhbGciOiJub25lIn0.
    eyJqdGkiOiIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsImlhdC
    I6MTQ1ODQ5NjAyNSwiaXNzIjoiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tIiwi
    YXVkIjpbImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MW
    ZhNWJiYzg3OTU5M2I3NzU0IiwiaHR0cHM6Ly9qaHViLmV4YW1wbGUuY29tL0Zl
    ZWRzLzVkNzYwNDUxNmIxZDA4NjQxZDc2NzZlZTciXSwic3ViIjoiaHR0cHM6Ly
    9zY2ltLmV4YW1wbGUuY29tL1VzZXJzLzQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIx
    ZDkiLCJldmVudHMiOnsidXJuOmlldGY6cGFyYW1zOnNjaW06ZXZlbnQ6cGFzc3
    dvcmRSZXNldCI6eyJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkifSwi
    aHR0cHM6Ly9leGFtcGxlLmNvbS9zY2ltL2V2ZW50L3Bhc3N3b3JkUmVzZXRFeH
    QiOnsicmVzZXRBdHRlbXB0cyI6NX19fQ."
  },
  "ack": [
    "f52901c4-3996-11ef-9454-0242ac120002",
    "0636e274-3997-11ef-9454-0242ac120002",
    "d563c724-79a0-4ff0-ba41-657fa5e2cb11"
  ],
  "setErrs": {
    "5c436b19-0958-4367-b408-2dd542606d3b" : {
      "err": "invalid subject",
      "description": "subject format not supported"
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="initiating-communication"><name>Initiating Communication</name>

<t>A Transceiver can initiate communication with a Peer in order to:</t>

<t><list style="symbols">
  <t>Acknowledge previously received SETs from the Peer.</t>
  <t>Send SETs to the Peer.</t>
  <t>Both acknowledge previously received SETs from the Peer and send SETs to the Peer.</t>
</list></t>

<t>To initiate communication, the Initiator makes a HTTP POST request to the Responder's Pushpull Endpoint <xref target="pushpull-endpoint"/>. The body of this request is of the content type "application/json". It contains a Communication Object <xref target="communication-object"/>, and the following additional field MAY be present:</t>

<dl>
  <dt>maxResponseEvents</dt>
  <dd>
    <t>OPTIONAL. A number which specifies the maximum number of events the Responder can include in its response to the Initiator. If this field is absent in the request, the Responder MAY include any number of events in the response. If this field is present, then the Responder MUST NOT include more events than the value of "maxResponseEvents" in its response to the specific request.</t>
  </dd>
</dl>

</section>
<section anchor="response-communication"><name>Response Communication</name>

<t>A Responder MUST respond to a communication from an Initiator by sending an HTTP Response.</t>

<section anchor="success-response"><name>Success Response</name>
<t>If the Responder is successful in processing the request, it MUST return the HTTP status code 200 (OK). The response MUST have the content-type "application/json" and the response MUST include a Communication Object <xref target="communication-object"/>.</t>

</section>
<section anchor="error-response"><name>Error Response</name>
<t>The Responder MUST respond with an error response if it is unable to process the request. The error response MUST include the appropriate error code as described in Section 2.4 of DeliveryPush <xref target="RFC8935"/>.</t>

</section>
</section>
<section anchor="example-request-and-response"><name>Example Request and Response</name>
<t>The following is a non-normative example of a request and its corresponding response</t>

<section anchor="request"><name>Request</name>

<figure title="Example Pushpull request" anchor="fig-example-request"><sourcecode type="http"><![CDATA[
POST /pushpull-endpoint HTTP/1.1
Host: sharedsignals-transceiver.myorg.example
Content-type: application/json
Authorization: Bearer eyJraWQiOiIyMDIwXzEiLCJJhbGciOiJSUzI1NiJ9...

{
  "ack": [],
  "sets": {
    "4d3559ec67504aaba65d40b0363faad8": 
    "eyJhbGciOiJub25lIn0.
    eyJqdGkiOiI0ZDM1NTllYzY3NTA0YWFiYTY1ZDQwYjAzNjNmYWFkOCIsImlhdC
    I6MTQ1ODQ5NjQwNCwiaXNzIjoiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tIiwi
    YXVkIjpbImh0dHBzOi8vc2NpbS5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MW
    ZhNWJiYzg3OTU5M2I3NzU0IiwiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tL0Zl
    ZWRzLzVkNzYwNDUxNmIxZDA4NjQxZDc2NzZlZTciXSwiZXZlbnRzIjp7InVybj
    ppZXRmOnBhcmFtczpzY2ltOmV2ZW50OmNyZWF0ZSI6eyJyZWYiOiJodHRwczov
    L3NjaW0uZXhhbXBsZS5jb20vVXNlcnMvNDRmNjE0MmRmOTZiZDZhYjYxZTc1Mj
    FkOSIsImF0dHJpYnV0ZXMiOlsiaWQiLCJuYW1lIiwidXNlck5hbWUiLCJwYXNz
    d29yZCIsImVtYWlscyJdfX19.",
    "3d0c3cf797584bd193bd0fb1bd4e7d30":
    "eyJhbGciOiJub25lIn0.
    eyJqdGkiOiIzZDBjM2NmNzk3NTg0YmQxOTNiZDBmYjFiZDRlN2QzMCIsImlhdC
    I6MTQ1ODQ5NjAyNSwiaXNzIjoiaHR0cHM6Ly9zY2ltLmV4YW1wbGUuY29tIiwi
    YXVkIjpbImh0dHBzOi8vamh1Yi5leGFtcGxlLmNvbS9GZWVkcy85OGQ1MjQ2MW
    ZhNWJiYzg3OTU5M2I3NzU0IiwiaHR0cHM6Ly9qaHViLmV4YW1wbGUuY29tL0Zl
    ZWRzLzVkNzYwNDUxNmIxZDA4NjQxZDc2NzZlZTciXSwic3ViIjoiaHR0cHM6Ly
    9zY2ltLmV4YW1wbGUuY29tL1VzZXJzLzQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIx
    ZDkiLCJldmVudHMiOnsidXJuOmlldGY6cGFyYW1zOnNjaW06ZXZlbnQ6cGFzc3
    dvcmRSZXNldCI6eyJpZCI6IjQ0ZjYxNDJkZjk2YmQ2YWI2MWU3NTIxZDkifSwi
    aHR0cHM6Ly9leGFtcGxlLmNvbS9zY2ltL2V2ZW50L3Bhc3N3b3JkUmVzZXRFeH
    QiOnsicmVzZXRBdHRlbXB0cyI6NX19fQ."
  },
  "setErrs": {
    "5c436b19-0958-4367-b408-2dd542606d3b" : {
      "err": "invalid subject",
      "description": "subject format not supported"
    }
  },
  "maxResponseEvents": 10
}
]]></sourcecode></figure>
<t>In the above example request, the Initiator does acknowledge any previous events. Delivers two SETs and reports an error on a previously received SET.</t>

</section>
<section anchor="response"><name>Response</name>
<t>The following is a non-normative example of a response:</t>

<figure title="Example Pushpull response" anchor="fig-example-response"><sourcecode type="http"><![CDATA[
HTTP/1.1 200 OK
Content-type: application/json

{
  "ack": [
    "3d0c3cf797584bd193bd0fb1bd4e7d30"
  ],
  "sets": {
    "756E69717565206964656E746966696572":
    "eyJ0eXAiOiJzZWNldmVudCtqd3QiLCJhbGciOiJIUzI1NiJ9Cg.
  eyJpc3MiOiJodHRwczovL2lkcC5leGFtcGxlLmNvbS8iLCJqdGkiOiI3NTZFNjk
  3MTc1NjUyMDY5NjQ2NTZFNzQ2OTY2Njk2NTcyIiwiaWF0IjoxNTA4MTg0ODQ1LC
  JhdWQiOiI2MzZDNjk2NTZFNzQ1RjY5NjQiLCJldmVudHMiOnsiaHR0cHM6Ly9zY
  2hlbWFzLm9wZW5pZC5uZXQvc2VjZXZlbnQvcmlzYy9ldmVudC10eXBlL2FjY291
  bnQtZGlzYWJsZWQiOnsic3ViamVjdCI6eyJzdWJqZWN0X3R5cGUiOiJpc3Mtc3V
  iIiwiaXNzIjoiaHR0cHM6Ly9pZHAuZXhhbXBsZS5jb20vIiwic3ViIjoiNzM3NT
  YyNkE2NTYzNzQifSwicmVhc29uIjoiaGlqYWNraW5nIn19fQ.
  Y4rXxMD406P2edv00cr9Wf3_XwNtLjB9n-jTqN1_lLc"
  }
}
]]></sourcecode></figure>
<t>In the above example, the Responder acknowledges one of the SETs it previously received and provides a SET to deliver to the initiator. There are no errors reported by the Responder.</t>

</section>
</section>
<section anchor="authn-and-authz"><name>Authentication and Authorization</name>
<t>The Initiator MUST verify the identity of the Responder by validating the TLS certification presented by the Responder, and verifying that it is the intended recipient of the request, before sending the Communication Object <xref target="communication-object"/>.</t>

<t>The Initiator MUST attempt to obtain the OAuth Protected Resource Metadata <xref target="OPRM"/> for the Responder endpoint. If such metadata is found, the Initiator MUST obtain an access token using the metadata. If no such metadata is found, then the Initiator MAY use any means to authorize itself to the Responder.</t>

<t>The Responder MUST verify the identity and authorization of the Initiator. The Responder MAY use OAuth Protected Resource Metadata <xref target="OPRM"/> for this purpose, but the Responder MAY use other means to authorize the Initiator, which are beyond the scope of this specification.</t>

</section>
<section anchor="delivery-reliability"><name>Delivery Reliability</name>
<t>A Transceiver MUST attempt to deliver any SETs it has previously attempted to deliver to a Peer until:
* It receives an acknowledgement through the <spanx style="verb">ack</spanx> value for that SET in a subsequent communication with the Peer
* It receives a <spanx style="verb">setErrs</spanx> object for that SET in a subsequent communication with the Peer
* It has attempted to deliver the SET a maximum number of times and has failed to communicate either due to communication errors or lack of inclusion in <spanx style="verb">ack</spanx> or <spanx style="verb">setErrs</spanx> in subsequent communications that were conducted for the maximum number of times. The maximum number of attempts MAY be set by the Transceiver for itself and SHOULD be communicated offline to the Peers.</t>

<t>If a Transceiver previously attempted to deliver a SET in a response to a Peer's request, the Transceiver MAY Initiate a request to the Peer in order to retry delivery of the SET. A Peer MUST be able to either provide <spanx style="verb">ack</spanx>s or <spanx style="verb">setErrs</spanx> for the same SETs either through requests or responses.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<section anchor="authentication-and-authorization"><name>Authentication and Authorization</name>
<t>Transceivers MUST follow the procedures described in section <xref target="authn-and-authz"/> in order to securely authenticate and authorize Peers</t>

</section>
<section anchor="http-and-tls"><name>HTTP and TLS</name>
<t>Transceivers MUST use TLS <xref target="RFC8446"/> to communicate with Peers and is subject to the security considerations of HTTP <xref target="RFC9110"/> Section 17.</t>

</section>
<section anchor="denial-of-service"><name>Denial of Service</name>
<t>A Responder may be vulnerable to denial of service attacks wherein a large number of spurious requests need to be processed. Having efficient authorization mechanisms such as OAuth 2.0 <xref target="RFC6749"/> can mitigate such attacks by leveraging standard infrastructure that is designed to handle such attacks.</t>

</section>
</section>
<section anchor="privacy-considerations"><name>Privacy Considerations</name>
<t>SETs may contain confidential information, and Transceivers receiving SETs must be careful not to log such content or ensure that sensitive information from the SET is redacted before logging.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>This specification does not add any new IANA considerations.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC6749">
  <front>
    <title>The OAuth 2.0 Authorization Framework</title>
    <author fullname="D. Hardt" initials="D." role="editor" surname="Hardt"/>
    <date month="October" year="2012"/>
    <abstract>
      <t>The OAuth 2.0 authorization framework enables a third-party application to obtain limited access to an HTTP service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the HTTP service, or by allowing the third-party application to obtain access on its own behalf. This specification replaces and obsoletes the OAuth 1.0 protocol described in RFC 5849. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6749"/>
  <seriesInfo name="DOI" value="10.17487/RFC6749"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC8259">
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
    <date month="December" year="2017"/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="90"/>
  <seriesInfo name="RFC" value="8259"/>
  <seriesInfo name="DOI" value="10.17487/RFC8259"/>
</reference>

<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="RFC8446">
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
    <date month="August" year="2018"/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8446"/>
  <seriesInfo name="DOI" value="10.17487/RFC8446"/>
</reference>

<reference anchor="RFC8935">
  <front>
    <title>Push-Based Security Event Token (SET) Delivery Using HTTP</title>
    <author fullname="A. Backman" initials="A." role="editor" surname="Backman"/>
    <author fullname="M. Jones" initials="M." role="editor" surname="Jones"/>
    <author fullname="M. Scurtescu" initials="M." surname="Scurtescu"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="A. Nadalin" initials="A." surname="Nadalin"/>
    <date month="November" year="2020"/>
    <abstract>
      <t>This specification defines how a Security Event Token (SET) can be delivered to an intended recipient using HTTP POST over TLS. The SET is transmitted in the body of an HTTP POST request to an endpoint operated by the recipient, and the recipient indicates successful or failed transmission via the HTTP response.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8935"/>
  <seriesInfo name="DOI" value="10.17487/RFC8935"/>
</reference>

<reference anchor="RFC8936">
  <front>
    <title>Poll-Based Security Event Token (SET) Delivery Using HTTP</title>
    <author fullname="A. Backman" initials="A." role="editor" surname="Backman"/>
    <author fullname="M. Jones" initials="M." role="editor" surname="Jones"/>
    <author fullname="M. Scurtescu" initials="M." surname="Scurtescu"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="A. Nadalin" initials="A." surname="Nadalin"/>
    <date month="November" year="2020"/>
    <abstract>
      <t>This specification defines how a series of Security Event Tokens (SETs) can be delivered to an intended recipient using HTTP POST over TLS initiated as a poll by the recipient. The specification also defines how delivery can be assured, subject to the SET Recipient's need for assurance.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8936"/>
  <seriesInfo name="DOI" value="10.17487/RFC8936"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>


<reference anchor="OPRM" target="https://datatracker.ietf.org/doc/draft-ietf-oauth-resource-metadata/">
  <front>
    <title>OAuth 2.0 Protected Resource Metadata</title>
    <author initials="M. B." surname="Jones" fullname="Michael B. Jones">
      <organization></organization>
    </author>
    <author initials="P." surname="Hunt" fullname="Phil Hunt">
      <organization></organization>
    </author>
    <author initials="A." surname="Parecki" fullname="Aaron Parecki">
      <organization></organization>
    </author>
    <date year="2024" month="May"/>
  </front>
</reference>


    </references>




  </back>

<!-- ##markdown-source:
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
MygVK9JWVZ6XzpHeDvxqeQGuIYMQLBZg2SmsQ9pTUAqEypiCi4PyIf6UX6iX
ACpRHsmItppB4SR5wOAE9KlaS6kOihyFYzSjo1LJ3+Yx/40oWhqCwC3UwK0+
Uw2z4ki5gDYytRiqCQwslFAt0Y4DnCAOK5JBqLEb4pPNkCVd1KqTCSTKM52n
m1rYbzA6CPJFNcG+RZGujKSgmLOlKpH5qZafHxSafpQqZGrIpRVbW1PbosVX
DGjxmb8EsAkjNe6HNfNhwrLV1kFGdvUDdnQeRf/XpvQdrcqkk2EUOhz6NKcr
CP+JhCdUGcRghwmhPGrfFPeBRC41o4rBKUSHcIXMKy8ElyOERRH8P68qpA1Z
DAAzVmmy3lOWuXUGlGJKuac20mYpY8ytIE2VZC31IdeOqbLXpUcDmlZrKfE/
JPnpEzl/pT6k0jL93AoiBQ4AYbMzLqAvB6otOAS3hvH777+TOUhmvAF7JYSd
Upu8ybOSUt2tNRot5jSPGmadUps2G27dtM1aszal1P0KI9VAtr6e2ZcO7/Pr
xLYaXicwK/ILfPjmXi7gQ8ecnHWrvaHnjTfjWm94bI5HF3w8HFcnZ3er8fx4
05v3fHi36J92RMf3Zu6pJNFpdod31f7ZXaM3v1v1TlecPvU2nXnI6dW96Vx1
mzfr1mZsefGN/1gfj6or+/IhGVutuMNX6tBn/PS46MyXdsefme7VyabPv744
Vm9pDxoeu7yInctX78bvvdiD1uVk9Lhw1l8b/cu7and+Z3VHksRk1htd8/Hm
udYfPjS6VqfW2zyYuML3uLgxJ54iMbrf3GweF73NeNU7e3jt+Z3XydlxHcSC
v8DPZuJNhg5/Gqz45Gni2cE9iLk86gSPa3suSSyXk6d7vx+czBwf2N4s5Yp9
/9GajBpm3++tJ6MLczLoNEHx8DzGHQndq/uVswlfJImbWm9OR2YyeZrN7KcT
MRk05rZlvjw+9Twn6L70zu793vzc7Pqw0HDCJ2eT2Xg+fgXOQB+SBGzRALfo
ApR5vRwHj+bkqcv7nuB0dMdvTq8TkN9D3bhIdNGY2aMHfL8aw86pU0GrtZ7I
fX6MxyNPOOtrd/pUbVWgrJEWVXNNp+ZMj1pHja912622arZrTu2q7dbZkVsz
S+0ft7zN5Oxk3rV6fm+zAMt7Nsf+3Wt/2APZTvzx/AL+3ns9627T/djyjte9
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
bKXmFi0SaBr/Axp3NHlxOQAA

-->

</rfc>

